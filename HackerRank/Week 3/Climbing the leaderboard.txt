Climbing the leaderboard 

#include <stdio.h>
#include <stdlib.h>

int* climbingLeaderboard(int ranked_count, int* ranked, int player_count, int* player, int* result_count) {
    int *d = (int*)malloc(ranked_count * sizeof(int));
    int dn = 0;
    for (int j = 0; j < ranked_count; j++) {
        if (j == 0 || ranked[j] != ranked[j-1]) {
            d[dn++] = ranked[j];
        }
    }
    int *r = (int*)malloc(player_count * sizeof(int));
    *result_count = player_count;
    int i = dn - 1;
    for (int j = 0; j < player_count; j++) {
        while (i >= 0 && player[j] >= d[i]) {
            i--;
        }
        r[j] = i + 2;
    }
    return r;
}

int main() {
    int n;
    scanf("%d", &n);
    int *ranked = (int*)malloc(n * sizeof(int));
    for (int j = 0; j < n; j++) scanf("%d", &ranked[j]);
    int m;
    scanf("%d", &m);
    int *player = (int*)malloc(m * sizeof(int));
    for (int j = 0; j < m; j++) scanf("%d", &player[j]);
    int result_count;
    int *r = climbingLeaderboard(n, ranked, m, player, &result_count);
    for (int j = 0; j < result_count; j++) {
        printf("%d\n", r[j]);
    }
    free(ranked);
    free(player);
    free(r);
    return 0;
}
