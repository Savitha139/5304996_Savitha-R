Recursive Digit Sum

#include <stdio.h>
#include <string.h>
long digit(long m){
    long s = 0;
    while(m>0){
        s += m%10;
        m/=10;
    }
    return s;
}
int supdigit(long m){
    if(m<10){
        return (int)m;
    }
    return supdigit(digit(m));
}
int superDigit(char* n, int k) {
    long a = 0;
    for(int i=0; n[i] != '\0'; i++){
        a += (n[i] - '0');
    }
    long m = a*k;
    return supdigit(m);
}
int main() {
    char n[100001]; 
    int k;
    scanf("%s %d", n, &k);
    printf("%d\n", superDigit(n, k));
    return 0;
}
